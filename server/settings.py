"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from dotenv import load_dotenv
from pathlib import Path
import pymysql
from datetime import timedelta
pymysql.install_as_MySQLdb()

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-x^tm@ulkkebj^b%_mzkti9hpa^17anc@6uejw(l3zy-1$2#(mp"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

PROJECT_APPS = [
    "endpoints",
]

THIRD_PARTY_APPS = [
    "rest_framework",
    "rest_framework.authtoken",
    "drf_spectacular",
    "djoser",
    'drf_yasg',
]

INSTALLED_APPS = DJANGO_APPS + PROJECT_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "ramayan_db",
        "USER": os.getenv('USER1'),
        "PASSWORD": os.getenv('PASSWORD1'),
        "HOST": "localhost",
        "PORT": "3306"
    }
}

# Cache configuration for handling OTP generation and validation
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',  # 'redis' is an in-memory(RAM) data structure store, used for faster read/write
        'LOCATION': 'redis://127.0.0.1:6379/1',  # port where redis is running (django communicates with it through this endpoint)
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# custom configuration settings

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # your application now supports JWT auth
    ],
    "DEFAULT_THROTTLE_CLASSES": [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
    ],
    "DEFAULT_THROTTLE_RATES": {
        'anon': '2/minute',
        'user': '4/minute'
    }
}

# Djoser: library that provides ready to use endpoints for authentication
DJOSER = {
    'TOKEN_MODEL': 'rest_framework_simplejwt.tokens.AccessToken'
}

# Simple_JWT: Used along with djoser to provide JWT tokens
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=5),  # access tokens: used in API calls for resource fetching(auth purposes)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),  # refresh tokens: used to generate access tokens after its(access tokens) expiry
    'ROTATE_REFRESH_TOKEN': False,  # when you generate new access tokens from refresh tokens, the output contains both new refresh and access tokens, but I only want new access tokens and not new refresh tokens so  do this.
}

# SPECTACULAR_SETTINGS = {
#     "TITLE": "Your Project API",
#     "DESCRIPTION": "Your project description",
#     "VERSION": "1.0.0",
#     "SERVE_INCLUDE_SCHEMA": True,
# }

"""
adarsh:
pwd: "Adarsh@11RNS"
tokens: {
    {
        "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcxMzYzMzQwNCwiaWF0IjoxNzA5MzEzNDA0LCJqdGkiOiJhMjIyZTgyZmM2ODY0ZjgxYTMzYzk4YTA2MjE0OWRkNCIsInVzZXJfaWQiOjd9.QoML3Fm85ftA2WxWGf1TB9pcS056TXCnkXh9BaNxUro",
        "access": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzA5NzQ1NDA0LCJpYXQiOjE3MDkzMTM0MDQsImp0aSI6ImZkNTdmYzA3MGIwZjQwMmI4ZmQyNzdhYWRmMzAwMzkxIiwidXNlcl9pZCI6N30.-nLT8IMmrrFD4GRUZ4AoZEgBesmPYUvES6eHAi3aNNc"
    }
}

"""